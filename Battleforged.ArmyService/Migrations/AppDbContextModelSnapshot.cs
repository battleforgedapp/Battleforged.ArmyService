// <auto-generated />
using System;
using Battleforged.ArmyService.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Battleforged.ArmyService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Army", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("army_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("army_name");

                    b.Property<Guid?>("ParentArmyId")
                        .HasColumnType("uuid")
                        .HasColumnName("army_parent_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("army_type");

                    b.HasKey("Id");

                    b.HasIndex("ParentArmyId");

                    b.ToTable("armies", (string)null);
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.BattleSize", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("battle_size_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("battle_size");

                    b.Property<int>("PointLimit")
                        .HasColumnType("integer")
                        .HasColumnName("points_limit");

                    b.HasKey("Id");

                    b.ToTable("def_battle_sizes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("273bf3bf-714a-478f-bc44-d07bd9f7c480"),
                            CreatedDate = new DateTime(2024, 4, 30, 18, 59, 57, 13, DateTimeKind.Utc).AddTicks(2150),
                            Description = "Incursion",
                            PointLimit = 1000
                        },
                        new
                        {
                            Id = new Guid("19147fa2-3004-411d-9992-223c19eb8c9f"),
                            CreatedDate = new DateTime(2024, 4, 30, 18, 59, 57, 13, DateTimeKind.Utc).AddTicks(2640),
                            Description = "Strike Force",
                            PointLimit = 2000
                        },
                        new
                        {
                            Id = new Guid("dcf594c8-a7b0-46af-9714-ebce6b58605b"),
                            CreatedDate = new DateTime(2024, 4, 30, 18, 59, 57, 13, DateTimeKind.Utc).AddTicks(2640),
                            Description = "Onslaught",
                            PointLimit = 3000
                        });
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Detachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("detachment_id");

                    b.Property<Guid>("ArmyId")
                        .HasColumnType("uuid")
                        .HasColumnName("army_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_date");

                    b.Property<string>("DetachmentName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("detachment_name");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("rule_name");

                    b.Property<string>("RuleText")
                        .HasColumnType("text")
                        .HasColumnName("rule_text");

                    b.HasKey("Id");

                    b.HasIndex("ArmyId");

                    b.ToTable("detachments", (string)null);
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.DetachmentEnhancement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("enhancement_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_date");

                    b.Property<Guid>("DetachmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("detachment_id");

                    b.Property<string>("EnhancementName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("enhancement_name");

                    b.Property<string>("EnhancementText")
                        .HasColumnType("text")
                        .HasColumnName("enhancement_text");

                    b.Property<int>("PointCost")
                        .HasColumnType("integer")
                        .HasColumnName("points_cost");

                    b.HasKey("Id");

                    b.HasIndex("DetachmentId");

                    b.ToTable("detachment_enhancements", (string)null);
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.EventOutbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("outbox_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("event_data");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(4098)
                        .HasColumnType("character varying(4098)")
                        .HasColumnName("event_name");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sent_date");

                    b.Property<int>("TotalAttempts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("total_attempts");

                    b.HasKey("Id");

                    b.HasIndex("SentDate");

                    b.ToTable("event_outbox", (string)null);
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("unit_id");

                    b.Property<Guid>("ArmyId")
                        .HasColumnType("uuid")
                        .HasColumnName("army_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_date");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("unit_name");

                    b.HasKey("Id");

                    b.HasIndex("ArmyId");

                    b.ToTable("units", (string)null);
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.UnitGrouping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("unit_grouping_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_date");

                    b.Property<int>("ModelCount")
                        .HasColumnType("integer")
                        .HasColumnName("model_count");

                    b.Property<int>("PointCost")
                        .HasColumnType("integer")
                        .HasColumnName("points_cost");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid")
                        .HasColumnName("unit_id");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("unit_groupings", (string)null);
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Army", b =>
                {
                    b.HasOne("Battleforged.ArmyService.Domain.Entities.Army", null)
                        .WithMany()
                        .HasForeignKey("ParentArmyId");
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Detachment", b =>
                {
                    b.HasOne("Battleforged.ArmyService.Domain.Entities.Army", null)
                        .WithMany()
                        .HasForeignKey("ArmyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.DetachmentEnhancement", b =>
                {
                    b.HasOne("Battleforged.ArmyService.Domain.Entities.Detachment", null)
                        .WithMany("Enhancements")
                        .HasForeignKey("DetachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Unit", b =>
                {
                    b.HasOne("Battleforged.ArmyService.Domain.Entities.Army", null)
                        .WithMany()
                        .HasForeignKey("ArmyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.UnitGrouping", b =>
                {
                    b.HasOne("Battleforged.ArmyService.Domain.Entities.Unit", "Unit")
                        .WithMany("UnitGroupings")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Detachment", b =>
                {
                    b.Navigation("Enhancements");
                });

            modelBuilder.Entity("Battleforged.ArmyService.Domain.Entities.Unit", b =>
                {
                    b.Navigation("UnitGroupings");
                });
#pragma warning restore 612, 618
        }
    }
}
